version: '3.8'
services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mycca
    volumes:
      - ./mycca_seed.sql:/docker-entrypoint-initdb.d/mycca_seed.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 10

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/slo-rules.yml:/etc/prometheus/slo-rules.yml
    ports:
      - "9090:9090"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:9090/-/ready"]
      interval: 15s
      timeout: 5s
      retries: 10

  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/api/health"]
      interval: 15s
      timeout: 5s
      retries: 20

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    command: ["start-dev", "--metrics-enabled", "--import-realm"]
    environment:
      - KEYCLOAK_ADMIN=$${KEYCLOAK_ADMIN:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=$${KEYCLOAK_ADMIN_PASSWORD:-admin}
    volumes:
      - ./keycloak/realm:/opt/keycloak/data/import
    ports:
      - "8080:8080"
      - "9990:9990"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:8080/realms/master"]
      interval: 15s
      timeout: 5s
      retries: 20

  # Optional: Add healthchecks for your API and Frontend if defined in base compose
  api:
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:5000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 20

  frontend:
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 20
